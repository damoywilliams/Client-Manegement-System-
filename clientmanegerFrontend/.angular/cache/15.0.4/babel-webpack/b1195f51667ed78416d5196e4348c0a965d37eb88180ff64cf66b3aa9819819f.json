{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./client.service\";\nexport class AppComponent {\n  constructor(clientservice) {\n    this.clientservice = clientservice;\n    this.title = 'clientapp';\n    this.clients = [];\n  }\n  ngOnInit() {\n    this.getClients();\n    //throw new Error('Method not implemented.');\n    //alert(\"helloe\");\n  }\n  // public getClients(): void{\n  //   alert(\"yep\");\n  //     this.clientservice.getClient().subscribe((response: client[])=>{\n  //       this.clients=response;\n  //     },\n  //     (error: HttpErrorResponse) =>{alert(error.message);\n  //     }\n  //     );\n  //   }\n  getClients() {\n    this.clientservice.getClient().subscribe({\n      next: response => this.clients = response,\n      error: error => error.message,\n      complete: () => console.info('complete')\n    });\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.clientService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 15,\n  vars: 0,\n  consts: [[1, \"navbar\", \"navbar-expand-lg\", \"navbar-dark\", \"bg-dark\"], [1, \"navbar-brand\", 2, \"color\", \"white\"], [\"type\", \"button\", \"data-toggle\", \"collapse\", \"data-target\", \"#navbarColor02\", \"aria-controls\", \"navbarColor02\", \"aria-expanded\", \"false\", \"aria-label\", \"Toggle navigation\", 1, \"navbar-toggler\"], [1, \"navbar-toggler-icon\"], [\"id\", \"navbarColor02\", 1, \"collapse\", \"navbar-collapse\"], [1, \"navbar-nav\", \"mr-auto\"], [1, \"nav-item\", \"active\"], [1, \"nav-link\", 3, \"click\"], [1, \"sr-only\"], [1, \"form-inline\", \"my-2\", \"my-lg-0\"], [\"type\", \"search\", \"ngModel\", \"\", \"name\", \"key\", \"id\", \"searchName\", \"placeholder\", \"Search employees...\", \"required\", \"\", 1, \"form-control\", \"mr-sm-2\", 3, \"ngModelChange\"], [\"key\", \"ngModel\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"nav\", 0)(1, \"a\", 1);\n      i0.ɵɵtext(2, \"Employee Manager\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 2);\n      i0.ɵɵelement(4, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 4)(6, \"ul\", 5)(7, \"li\", 6)(8, \"a\", 7);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_a_click_8_listener() {\n        return ctx.onOpenModal(null, \"add\");\n      });\n      i0.ɵɵtext(9, \"Add Employee \");\n      i0.ɵɵelementStart(10, \"span\", 8);\n      i0.ɵɵtext(11, \"(current)\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(12, \"form\", 9)(13, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_13_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(14);\n        return i0.ɵɵresetView(ctx.searchEmployees(_r0.value));\n      });\n      i0.ɵɵelementEnd()()()();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;AAYA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IAFjC,UAAK,GAAG,WAAW;IAGjB,IAAI,CAACC,OAAO,GAAC,EAAE;EACjB;EACAC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;IACjB;IACA;EACF;EACF;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EAKA;EAGSA,UAAU;IAEf,IAAI,CAACH,aAAa,CAACI,SAAS,EAAE,CAACC,SAAS,CAAC;MAC5CC,IAAI,EAAEC,QAAkB,IAAK,IAAI,CAACN,OAAO,GAACM,QAAQ;MAClDC,KAAK,EAAGA,KAAuB,IAAKA,KAAK,CAACC,OAAO;MAEjDC,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAI,CAAC,UAAU;KACnC,CAAC;EAEF;;AArCSd,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MCZzBC,8BAAyD;MACRA,gCAAgB;MAAAA,iBAAI;MACjEA,iCAAoL;MACpLA,0BAAyC;MACzCA,iBAAS;MACTA,8BAAyD;MAG5BA;QAAA,OAASC,gBAAY,IAAI,EAAE,KAAK,CAAC;MAAA,EAAC;MAACD,6BAAa;MAAAA,gCAAsB;MAAAA,0BAAS;MAAAA,iBAAO;MAGhHA,gCAAuC;MACfA;QAAAA;QAAA;QAAA,OAAiBA,6CAA0B;MAAA,EAAC;MAAjEA,iBACoG","names":["AppComponent","constructor","clientservice","clients","ngOnInit","getClients","getClient","subscribe","next","response","error","message","complete","console","info","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/damoywilliams/clientapp/src/app/app.component.ts","/Users/damoywilliams/clientapp/src/app/app.component.html"],"sourcesContent":["import { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Client } from './client';\n//import { Client } from './Client';\n//import { Client } from './Client';\nimport { clientService } from './client.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'clientapp';\n    public clients: Client[];\n  constructor(private clientservice: clientService){\n    this.clients=[];\n  }\n  ngOnInit(): void {\n    this.getClients();\n    //throw new Error('Method not implemented.');\n    //alert(\"helloe\");\n  }\n// public getClients(): void{\n//   alert(\"yep\");\n//     this.clientservice.getClient().subscribe((response: client[])=>{\n//       this.clients=response;\n//     },\n     \n//     (error: HttpErrorResponse) =>{alert(error.message);\n    \n//     }\n//     );\n    \n    \n    \n  \n//   }\n\n\n  public getClients(): void{\n  \n    this.clientservice.getClient().subscribe({\n next:(response: Client[]) => this.clients=response,\n error: (error:HttpErrorResponse) => error.message,\n \n complete: () => console.info('complete') \n    })\n    \n    }\n\n\n  }  \n\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" style=\"color:white;\">Employee Manager</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarColor02\" aria-controls=\"navbarColor02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarColor02\">\n       <ul class=\"navbar-nav mr-auto\">\n          <li class=\"nav-item active\">\n             <a class=\"nav-link\" (click)=\"onOpenModal(null, 'add')\">Add Employee <span class=\"sr-only\">(current)</span></a>\n          </li>\n       </ul>\n       <form class=\"form-inline my-2 my-lg-0\">\n          <input type=\"search\" (ngModelChange)=\"searchEmployees(key.value)\" #key=\"ngModel\" ngModel\n           name=\"key\" id=\"searchName\" class=\"form-control mr-sm-2\" placeholder=\"Search employees...\" required>\n       </form>\n    </div>\n  </nav>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}