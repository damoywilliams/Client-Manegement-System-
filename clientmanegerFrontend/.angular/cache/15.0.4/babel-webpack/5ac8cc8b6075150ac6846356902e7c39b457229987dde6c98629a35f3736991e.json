{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(clientservice) {\n    this.clientservice = clientservice;\n  }\n  ngOnInit() {\n    this.getClients();\n  }\n  getClients() {\n    this.clientservice.getClient().subscribe(response => {\n      this.clients = response;\n      console.log(this.clients);\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onAddClient(addForm) {\n    document.getElementById('add-employee-form').click();\n    this.clientservice.addClient(addForm.value).subscribe(response => {\n      console.log(response);\n      this.getClients();\n      addForm.reset();\n    }, error => {\n      alert(error.message);\n      addForm.reset();\n    });\n  }\n  onUpdateClient(id) {\n    this.clientservice.update(id).subscribe(response => {\n      console.log(response);\n      this.getClients();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  onDeleteClient(ClientId) {\n    this.clientservice.delete(ClientId).subscribe(response => {\n      console.log(response);\n      this.getClients();\n    }, error => {\n      alert(error.message);\n    });\n  }\n  searchclients(key) {\n    console.log(key);\n    const results = [];\n    for (const employee of this.clients) {\n      if (employee.firstname.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.phonenumber.toLowerCase().indexOf(key.toLowerCase()) !== -1 || employee.casediscription.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.clients = results;\n    if (results.length === 0 || !key) {\n      this.getClients();\n    }\n  }\n  onOpenModal(client, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      this.editClient = client;\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      this.deleteClient = client;\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container.appendChild(button);\n    button.click();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":"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","names":["Component","AppComponent","constructor","clientservice","ngOnInit","getClients","getClient","subscribe","response","clients","console","log","error","alert","message","onAddClient","addForm","document","getElementById","click","addClient","value","reset","onUpdateClient","id","update","onDeleteClient","ClientId","delete","searchclients","key","results","employee","firstname","toLowerCase","indexOf","email","phonenumber","casediscription","push","length","onOpenModal","client","mode","container","button","createElement","type","style","display","setAttribute","editClient","deleteClient","appendChild","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/damoywilliams/clientapp/src/app/app.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Client} from './client';\nimport { clientService } from './client.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  public clients!: Client[];\n  public editClient!: Client|null;\n  public deleteClient!: Client|null;\n\n  constructor(private clientservice: clientService){}\n\n  ngOnInit() {\n    this.getClients();\n  }\n\n  public getClients(): void {\n    this.clientservice.getClient().subscribe(\n      (response: Client[]) => {\n      \n        this.clients = response;\n        console.log(this.clients);\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onAddClient(addForm: NgForm): void {\n    document.getElementById('add-employee-form')!.click();\n    this.clientservice.addClient(addForm.value).subscribe(\n      (response: Client) => {\n        console.log(response);\n        this.getClients();\n        addForm.reset();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n        addForm.reset();\n      }\n    );\n  }\n\n  public onUpdateClient(id: number): void {\n    this.clientservice.update(id).subscribe(\n      (response:void) => {\n        console.log(response);\n        this.getClients();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public onDeleteClient(ClientId: number): void {\n    this.clientservice.delete(ClientId).subscribe(\n      (response: void) => {\n        console.log(response);\n        this.getClients();\n      },\n      (error: HttpErrorResponse) => {\n        alert(error.message);\n      }\n    );\n  }\n\n  public searchclients(key: string): void {\n    console.log(key);\n    const results: Client[] = [];\n    for (const employee of this.clients) {\n      if (employee.firstname.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.email.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.phonenumber.toLowerCase().indexOf(key.toLowerCase()) !== -1\n      || employee.casediscription.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(employee);\n      }\n    }\n    this.clients = results;\n    if (results.length === 0 || !key) {\n      this.getClients();\n    }\n  }\n\n  public onOpenModal(client :Client|null, mode: string): void {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'modal');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addEmployeeModal');\n    }\n    if (mode === 'edit') {\n      this.editClient = client;\n      button.setAttribute('data-target', '#updateEmployeeModal');\n    }\n    if (mode === 'delete') {\n      this.deleteClient= client;\n      button.setAttribute('data-target', '#deleteEmployeeModal');\n    }\n    container!.appendChild(button);\n    button.click();\n  }\n\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}