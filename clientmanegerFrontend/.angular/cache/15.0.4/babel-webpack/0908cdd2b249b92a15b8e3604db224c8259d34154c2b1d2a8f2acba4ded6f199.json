{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor(clientservice) {\n    this.clientservice = clientservice;\n    this.title = 'clientapp';\n    this.clients = [];\n  }\n  ngOnInit() {\n    this.getClients();\n  }\n  getClients() {\n    this.clientservice.getClient().subscribe({\n      next: response => this.clients = response,\n      error: error => error.message,\n      complete: () => console.info('complete')\n    });\n  }\n  onAddClient(addForm) {\n    document.getElementById('add-employee-form')?.click();\n    this.clientservice.addClient(addForm.value).subscribe({\n      next: response => {\n        console.log(response);\n        this.getClients();\n        addForm.reset();\n      },\n      error: error => alert(error.message),\n      complete: () => console.info('complete')\n    });\n  }\n  onUpdateClient(id) {\n    this.clientservice.update(id).subscribe({});\n  }\n  onDeleteClient(id) {\n    this.clientservice.delete(id).subscribe({\n      next: response => {\n        console.log(response);\n        this.getClients();\n      },\n      error: error => error.message,\n      complete: () => console.info('complete')\n    });\n  }\n  searchClients(key) {\n    const results = [];\n    for (const client of this.clients) {\n      if (client.firstname.toLowerCase().indexOf(key.toLowerCase()) !== -1) {\n        results.push(client);\n      }\n    }\n    this.clients = results;\n    if (results.length === 0 || !key) {}\n    this.getClients();\n  }\n  onOpenModal(client, mode) {\n    const container = document.getElementById('main-container');\n    const button = document.createElement('button');\n    button.type = 'button';\n    button.style.display = 'none';\n    button.setAttribute('data-toggle', 'model');\n    if (mode === 'add') {\n      button.setAttribute('data-target', '#addClientModal');\n    }\n    if (mode === 'adit') {\n      this.editClient = client;\n      button.setAttribute('data-target', '#updateClientModal');\n    }\n    if (mode === 'delete') {\n      this.deleteClient = client;\n      button.setAttribute('data-target', '#deleteClientModal');\n    }\n    container?.appendChild(button);\n    button.click();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAgB,eAAe;AAW1C,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAOvBC,YAAoBC,aAA4B;IAA5B,kBAAa,GAAbA,aAAa;IANjC,UAAK,GAAG,WAAW;IAOjB,IAAI,CAACC,OAAO,GAAC,EAAE;EACjB;EACAC,QAAQ;IACN,IAAI,CAACC,UAAU,EAAE;EAEnB;EAIOA,UAAU;IAEf,IAAI,CAACH,aAAa,CAACI,SAAS,EAAE,CAACC,SAAS,CAAC;MAC5CC,IAAI,EAAEC,QAAkB,IAAK,IAAI,CAACN,OAAO,GAACM,QAAQ;MAClDC,KAAK,EAAGA,KAAuB,IAAKA,KAAK,CAACC,OAAO;MAEjDC,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAI,CAAC,UAAU;KACnC,CAAC;EAEF;EAEGC,WAAW,CAACC,OAAe;IAChCC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,EAAEC,KAAK,EAAE;IACrD,IAAI,CAACjB,aAAa,CAACkB,SAAS,CAACJ,OAAO,CAACK,KAAK,CAAC,CAACd,SAAS,CAAC;MACtDC,IAAI,EAAEC,QAAgB,IAAI;QAAEI,OAAO,CAACS,GAAG,CAACb,QAAQ,CAAC;QAAE,IAAI,CAACJ,UAAU,EAAE;QAAEW,OAAO,CAACO,KAAK,EAAE;MAAC,CAAC;MACvFb,KAAK,EAAGA,KAAuB,IAAIc,KAAK,CAACd,KAAK,CAACC,OAAO,CAAC;MACvDC,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAI,CAAC,UAAU;KAGtC,CAAC;EACJ;EAKOW,cAAc,CAACC,EAAU;IAE9B,IAAI,CAACxB,aAAa,CAACyB,MAAM,CAACD,EAAE,CAAC,CAACnB,SAAS,CAAC,EAKvC,CAAC;EACJ;EAGOqB,cAAc,CAACF,EAAU;IAE9B,IAAI,CAACxB,aAAa,CAAC2B,MAAM,CAACH,EAAE,CAAC,CAACnB,SAAS,CAAC;MACxCC,IAAI,EAAEC,QAAc,IAAI;QAAEI,OAAO,CAACS,GAAG,CAACb,QAAQ,CAAC;QAAE,IAAI,CAACJ,UAAU,EAAE;MAAC,CAAC;MACpEK,KAAK,EAAGA,KAAuB,IAAKA,KAAK,CAACC,OAAO;MACjDC,QAAQ,EAAE,MAAMC,OAAO,CAACC,IAAI,CAAC,UAAU;KAGtC,CAAC;EACJ;EACOgB,aAAa,CAACC,GAAU;IAC/B,MAAMC,OAAO,GAAY,EAAE;IAC3B,KAAK,MAAMC,MAAM,IAAI,IAAI,CAAC9B,OAAO,EAAC;MACjC,IAAG8B,MAAM,CAACC,SAAS,CAACC,WAAW,EAAE,CAACC,OAAO,CAACL,GAAG,CAACI,WAAW,EAAE,CAAC,KAAG,CAAC,CAAC,EAAC;QACjEH,OAAO,CAACK,IAAI,CAACJ,MAAM,CAAC;;;IAItB,IAAI,CAAC9B,OAAO,GAAC6B,OAAO;IACpB,IAAGA,OAAO,CAACM,MAAM,KAAG,CAAC,IAAI,CAACP,GAAG,EAAC;IAC9B,IAAI,CAAC1B,UAAU,EAAE;EACjB;EAWWkC,WAAW,CAACN,MAAa,EAACO,IAAY;IAC3C,MAAMC,SAAS,GAAExB,QAAQ,CAACC,cAAc,CAAC,gBAAgB,CAAC;IAE1D,MAAMwB,MAAM,GAACzB,QAAQ,CAAC0B,aAAa,CAAC,QAAQ,CAAC;IAC7CD,MAAM,CAACE,IAAI,GAAC,QAAQ;IACpBF,MAAM,CAACG,KAAK,CAACC,OAAO,GAAC,MAAM;IAC3BJ,MAAM,CAACK,YAAY,CAAC,aAAa,EAAC,OAAO,CAAC;IAC1C,IAAGP,IAAI,KAAI,KAAK,EAAC;MACfE,MAAM,CAACK,YAAY,CAAC,aAAa,EAAC,iBAAiB,CAAC;;IAItD,IAAGP,IAAI,KAAI,MAAM,EAAC;MAChB,IAAI,CAACQ,UAAU,GAACf,MAAM;MACtBS,MAAM,CAACK,YAAY,CAAC,aAAa,EAAC,oBAAoB,CAAC;;IAIzD,IAAGP,IAAI,KAAI,QAAQ,EAAC;MAClB,IAAI,CAACS,YAAY,GAAChB,MAAM;MACxBS,MAAM,CAACK,YAAY,CAAC,aAAa,EAAC,oBAAoB,CAAC;;IAGzDN,SAAS,EAAES,WAAW,CAACR,MAAM,CAAC;IAC9BA,MAAM,CAACvB,KAAK,EAAE;EAChB;CAED;AAhHUnB,YAAY,eALxBD,SAAS,CAAC;EACToD,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,qBAAqB;CAClC,CAAC,GACWrD,YAAY,CAgHtB;SAhHUA,YAAY","names":["Component","AppComponent","constructor","clientservice","clients","ngOnInit","getClients","getClient","subscribe","next","response","error","message","complete","console","info","onAddClient","addForm","document","getElementById","click","addClient","value","log","reset","alert","onUpdateClient","id","update","onDeleteClient","delete","searchClients","key","results","client","firstname","toLowerCase","indexOf","push","length","onOpenModal","mode","container","button","createElement","type","style","display","setAttribute","editClient","deleteClient","appendChild","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/damoywilliams/clientapp/src/app/app.component.ts"],"sourcesContent":["\nimport { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Client } from './client';\nimport { clientService } from './client.service';\nimport { HttpErrorResponse } from '@angular/common/http'; \n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  title = 'clientapp';\n\n    public clients: Client[];\n    public editClient!: Client;\n    public deleteClient!: Client; \n   \n  constructor(private clientservice: clientService){\n    this.clients=[];\n  }\n  ngOnInit(): void {\n    this.getClients();\n\n  }\n\n\n\n  public getClients(): void{\n  \n    this.clientservice.getClient().subscribe({\n next:(response: Client[]) => this.clients=response,\n error: (error:HttpErrorResponse) => error.message,\n \n complete: () => console.info('complete') \n    })\n    \n    }\n\npublic onAddClient(addForm: NgForm): void {\n  document.getElementById('add-employee-form')?.click();\n  this.clientservice.addClient(addForm.value).subscribe({\n  next:(response: Client) => {console.log(response); this.getClients(); addForm.reset();},\n  error: (error:HttpErrorResponse) =>alert(error.message),\n  complete: () => console.info('complete') \n \n\n  })\n}\n\n\n\n\npublic onUpdateClient(id: number ): void {\n  \n  this.clientservice.update(id).subscribe({\n   \n    \n  \n\n  })\n}\n\n\npublic onDeleteClient(id: number): void {\n  \n  this.clientservice.delete(id).subscribe({\n  next:(response: void) => {console.log(response); this.getClients();},\n  error: (error:HttpErrorResponse) => error.message,\n  complete: () => console.info('complete') \n \n\n  })\n}\npublic searchClients(key:string):void{\nconst results : Client[]=[]; \nfor (const client of this.clients){\n if(client.firstname.toLowerCase().indexOf(key.toLowerCase())!==-1){\n  results.push(client);\n }\n\n}\nthis.clients=results;\nif(results.length===0 || !key){}\nthis.getClients();\n}\n\n\n\n\n\n\n\n\n\n\n    public onOpenModal(client:Client,mode: string): void{\n      const container= document.getElementById('main-container');\n\n      const button=document.createElement('button');\n      button.type='button';\n      button.style.display='none';\n      button.setAttribute('data-toggle','model');\n      if(mode ==='add'){\n        button.setAttribute('data-target','#addClientModal');\n\n      }\n\n      if(mode ==='adit'){\n        this.editClient=client;\n        button.setAttribute('data-target','#updateClientModal');\n\n      }\n\n      if(mode ==='delete'){\n        this.deleteClient=client\n        button.setAttribute('data-target','#deleteClientModal');\n\n      }\n      container?.appendChild(button);\n      button.click();\n    }\n\n  }  \n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}